static boolean shouldIncludeJava(String idea_version_string) {
    if (idea_version_string.contains('-')) {
        idea_version_string = idea_version_string.substring(idea_version_string.indexOf('-') + 1)
    }
    if (idea_version_string.contains('.')) {
        idea_version_string = idea_version_string.substring(0, idea_version_string.indexOf('.'))
    }
    try {
        int idea_version_int = Integer.parseInt(idea_version_string);
        return idea_version_int >= 2019 || (idea_version_int < 1500 && idea_version_int >= 193);
    } catch (Exception e) {
        return true
    }
}

buildscript {
    project.ext {
        kotlin_version = "1.9.10"
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        gradlePluginPortal()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$project.kotlin_version"
    }
}

allprojects {
    group 'com.xenoamess.p3c.idea'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding = 'UTF-8'
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        gradlePluginPortal()
        google()
    }
}

