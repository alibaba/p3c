plugins {
    id 'java'
    id "org.jetbrains.intellij" version "1.13.3"

    id "org.sonarqube" version "4.4.0.3356"

    id "com.github.ben-manes.versions" version "0.49.0"
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'signing'

javadoc {
    options.tags = ["date"]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

def myPlugins = []
if (shouldIncludeJava(idea_version)) {
    myPlugins.add('java')
}

sonarqube {
    properties {
        property "sonar.projectKey", "p3c-idea"
        property "sonar.organization", "xenoamess-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "023904832cfec46a1aa61bb7aeee156b066cb3bc"
    }
}

intellij {
    version.set(idea_version)
    plugins.set(myPlugins)
    pluginName.set(plugin_name)
    updateSinceUntilBuild.set(false)
    sandboxDir.set("$project.buildDir/idea-sandbox/$idea_version")
}
version plugin_version

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

dependencies {
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.32'
    implementation("com.xenoamess.p3c:p3c-pmd:$plugin_version") {
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'org.slf4j'
    }
    implementation group: 'org.javassist', name: 'javassist', version: '3.29.2-GA'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$project.kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$project.kotlin_version"
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

signing {
    required {
        isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}
