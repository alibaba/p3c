plugins {
    id 'java'
    id "org.jetbrains.intellij" version "1.1.4"

    id "org.sonarqube" version "3.3"

    id 'maven'
    id "com.github.ben-manes.versions" version "0.39.0"
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

javadoc {
    options.tags = ["date"]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

def myPlugins = []
if (shouldIncludeJava(idea_version)) {
    myPlugins.add('java')
}

sonarqube {
    properties {
        property "sonar.projectKey", "p3c-idea"
        property "sonar.organization", "xenoamess-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "023904832cfec46a1aa61bb7aeee156b066cb3bc"
    }
}

intellij {
    version.set(idea_version)
    plugins.set(myPlugins)
    pluginName.set(plugin_name)
    updateSinceUntilBuild.set(false)
    sandboxDir.set("$project.buildDir/idea-sandbox/$idea_version")
}
version plugin_version

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

dependencies {
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.31'
    compile 'com.xenoamess.p3c:p3c-pmd:2.1.1.1x'
    compile group: 'org.javassist', name: 'javassist', version: '3.28.0-GA'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getProperty('ossrhUsername'), password: System.getProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getProperty('ossrhUsername'), password: System.getProperty('ossrhPassword'))
            }

            pom.project {
                name 'p3c-common'
                packaging 'jar'
                description 'P3c Idea Plugin Common.'
                url 'https://github.com/xenoamess/p3c'

                scm {
                    url 'https://github.com/xenoamess/p3c'
                    connection 'scm:git:https://git@github.com/xenoamess/p3c.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'junlie'
                        name 'Junlie'
                        email 'sean.caikang@gmail.com'
                    }
                    developer {
                        id 'ZengHou'
                        name 'ZengHou'
                        email 'fengwei1983@gmail.com'
                    }
                    developer {
                        id 'XenoAmess'
                        name 'XenoAmess'
                        email 'xenoamess@gmail.com'
                        organization 'XenoAmess'
                        url 'https://github.com/xenoamess'
                    }
                }
            }
        }
    }
}

signing {
    required {
        isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}
